# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ----------------------------------------------------------
# WARNING: This file is autogenerated. Do not manually edit.
# ----------------------------------------------------------

# [START gke_release_kubernetes_manifests_microservices_demo]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: email
spec:
  selector:
    matchLabels:
      app: email
  template:
    metadata:
      labels:
        app: email
    spec:
      serviceAccountName: go-micro
      terminationGracePeriodSeconds: 5
      containers:
        - name: server
          image: xpunch/go-micro-demo-email:v1.0.0
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
            - name: DISABLE_TRACING
              value: "1"
            - name: DISABLE_PROFILER
              value: "1"
          readinessProbe:
            periodSeconds: 5
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:8080"]
          livenessProbe:
            periodSeconds: 5
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:8080"]
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: email
spec:
  type: ClusterIP
  selector:
    app: email
  ports:
    - name: grpc
      port: 5000
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkout
spec:
  selector:
    matchLabels:
      app: checkout
  template:
    metadata:
      labels:
        app: checkout
    spec:
      serviceAccountName: go-micro
      containers:
        - name: server
          image: xpunch/go-micro-demo-checkout:v1.0.0
          ports:
            - containerPort: 5050
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          env:
            - name: PORT
              value: "5050"
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: "productcatalog:3550"
            - name: SHIPPING_SERVICE_ADDR
              value: "shipping:50051"
            - name: PAYMENT_SERVICE_ADDR
              value: "payment:50051"
            - name: EMAIL_SERVICE_ADDR
              value: "email:5000"
            - name: CURRENCY_SERVICE_ADDR
              value: "currency:7000"
            - name: CART_SERVICE_ADDR
              value: "cart:7070"
            - name: DISABLE_STATS
              value: "1"
            - name: DISABLE_TRACING
              value: "1"
            - name: DISABLE_PROFILER
              value: "1"
            - name: JAEGER_SERVICE_ADDR
              value: "jaeger-collector:14268"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: checkout
spec:
  type: ClusterIP
  selector:
    app: checkout
  ports:
    - name: grpc
      port: 5050
      targetPort: 5050
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendation
spec:
  selector:
    matchLabels:
      app: recommendation
  template:
    metadata:
      labels:
        app: recommendation
    spec:
      serviceAccountName: go-micro
      terminationGracePeriodSeconds: 5
      containers:
        - name: server
          image: xpunch/go-micro-demo-recommendation:v1.0.0
          ports:
            - containerPort: 8080
          readinessProbe:
            periodSeconds: 5
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:8080"]
          livenessProbe:
            periodSeconds: 5
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:8080"]
          env:
            - name: PORT
              value: "8080"
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: "productcatalog:3550"
            - name: DISABLE_TRACING
              value: "1"
            - name: DISABLE_PROFILER
              value: "1"
            - name: DISABLE_DEBUGGER
              value: "1"
          resources:
            requests:
              cpu: 100m
              memory: 220Mi
            limits:
              cpu: 200m
              memory: 450Mi
---
apiVersion: v1
kind: Service
metadata:
  name: recommendation
spec:
  type: ClusterIP
  selector:
    app: recommendation
  ports:
    - name: grpc
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: go-micro
      containers:
        - name: server
          image: xpunch/go-micro-demo-frontend:v1.0.0
          ports:
            - containerPort: 8080
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
                - name: "Cookie"
                  value: "shop_session-id=x-readiness-probe"
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
                - name: "Cookie"
                  value: "shop_session-id=x-liveness-probe"
          env:
            - name: PORT
              value: "8080"
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: "productcatalog:3550"
            - name: CURRENCY_SERVICE_ADDR
              value: "currency:7000"
            - name: CART_SERVICE_ADDR
              value: "cart:7070"
            - name: RECOMMENDATION_SERVICE_ADDR
              value: "recommendation:8080"
            - name: SHIPPING_SERVICE_ADDR
              value: "shipping:50051"
            - name: CHECKOUT_SERVICE_ADDR
              value: "checkout:5050"
            - name: AD_SERVICE_ADDR
              value: "ad:9555"
            # # ENV_PLATFORM: One of: local, gcp, aws, azure, onprem, alibaba
            # # When not set, go-micros to "local" unless running in GKE, otherwies auto-sets to gcp
            # - name: ENV_PLATFORM
            #   value: "aws"
            - name: DISABLE_TRACING
              value: "1"
            - name: DISABLE_PROFILER
              value: "1"
            # - name: JAEGER_SERVICE_ADDR
            #   value: "jaeger-collector:14268"
            # - name: CYMBAL_BRANDING
            #   value: "true"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
    - name: http
      port: 80
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-external
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
    - name: http
      port: 80
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment
spec:
  selector:
    matchLabels:
      app: payment
  template:
    metadata:
      labels:
        app: payment
    spec:
      serviceAccountName: go-micro
      terminationGracePeriodSeconds: 5
      containers:
        - name: server
          image: xpunch/go-micro-demo-payment:v1.0.0
          ports:
            - containerPort: 50051
          env:
            - name: PORT
              value: "50051"
            - name: DISABLE_TRACING
              value: "1"
            - name: DISABLE_PROFILER
              value: "1"
            - name: DISABLE_DEBUGGER
              value: "1"
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:50051"]
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:50051"]
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: payment
spec:
  type: ClusterIP
  selector:
    app: payment
  ports:
    - name: grpc
      port: 50051
      targetPort: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productcatalog
spec:
  selector:
    matchLabels:
      app: productcatalog
  template:
    metadata:
      labels:
        app: productcatalog
    spec:
      serviceAccountName: go-micro
      terminationGracePeriodSeconds: 5
      containers:
        - name: server
          image: xpunch/go-micro-demo-productcatalog:v1.0.0
          ports:
            - containerPort: 3550
          env:
            - name: PORT
              value: "3550"
            - name: DISABLE_STATS
              value: "1"
            - name: DISABLE_TRACING
              value: "1"
            - name: DISABLE_PROFILER
              value: "1"
          # - name: JAEGER_SERVICE_ADDR
          #   value: "jaeger-collector:14268"
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:3550"]
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:3550"]
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: productcatalog
spec:
  type: ClusterIP
  selector:
    app: productcatalog
  ports:
    - name: grpc
      port: 3550
      targetPort: 3550
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cart
spec:
  selector:
    matchLabels:
      app: cart
  template:
    metadata:
      labels:
        app: cart
    spec:
      serviceAccountName: go-micro
      terminationGracePeriodSeconds: 5
      containers:
        - name: server
          image: xpunch/go-micro-demo-cart:v1.0.0
          imagePullPolicy: Never
          ports:
            - containerPort: 7070
          env:
            - name: REDIS_ADDR
              value: "redis-cart:6379"
          resources:
            requests:
              cpu: 200m
              memory: 64Mi
            limits:
              cpu: 300m
              memory: 128Mi
          readinessProbe:
            initialDelaySeconds: 15
            exec:
              command:
                ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]
          livenessProbe:
            initialDelaySeconds: 15
            periodSeconds: 10
            exec:
              command:
                ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]
---
apiVersion: v1
kind: Service
metadata:
  name: cart
spec:
  type: ClusterIP
  selector:
    app: cart
  ports:
    - name: grpc
      port: 7070
      targetPort: 7070
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator
spec:
  selector:
    matchLabels:
      app: loadgenerator
  replicas: 1
  template:
    metadata:
      labels:
        app: loadgenerator
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: go-micro
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      initContainers:
        - command:
            - /bin/sh
            - -exc
            - |
              echo "Init container pinging frontend: ${FRONTEND_ADDR}..."
              STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
              if test $STATUSCODE -ne 200; then
                  echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
                  exit 1
              fi
          name: frontend-check
          image: busybox:latest
          env:
            - name: FRONTEND_ADDR
              value: "frontend:80"
      containers:
        - name: main
          image: gcr.io/google-samples/microservices-demo/loadgenerator:v0.3.8
          env:
            - name: FRONTEND_ADDR
              value: "frontend:80"
            - name: USERS
              value: "10"
          resources:
            requests:
              cpu: 300m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: currency
spec:
  selector:
    matchLabels:
      app: currency
  template:
    metadata:
      labels:
        app: currency
    spec:
      serviceAccountName: go-micro
      terminationGracePeriodSeconds: 5
      containers:
        - name: server
          image: xpunch/go-micro-demo-currency:v1.0.0
          ports:
            - name: grpc
              containerPort: 7000
          env:
            - name: PORT
              value: "7000"
            - name: DISABLE_TRACING
              value: "1"
            - name: DISABLE_PROFILER
              value: "1"
            - name: DISABLE_DEBUGGER
              value: "1"
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:7000"]
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:7000"]
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: currency
spec:
  type: ClusterIP
  selector:
    app: currency
  ports:
    - name: grpc
      port: 7000
      targetPort: 7000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipping
spec:
  selector:
    matchLabels:
      app: shipping
  template:
    metadata:
      labels:
        app: shipping
    spec:
      serviceAccountName: go-micro
      containers:
        - name: server
          image: xpunch/go-micro-demo-shipping:v1.0.0
          ports:
            - containerPort: 50051
          env:
            - name: PORT
              value: "50051"
            - name: DISABLE_STATS
              value: "1"
            - name: DISABLE_TRACING
              value: "1"
            - name: DISABLE_PROFILER
              value: "1"
          # - name: JAEGER_SERVICE_ADDR
          #   value: "jaeger-collector:14268"
          readinessProbe:
            periodSeconds: 5
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:50051"]
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:50051"]
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: shipping
spec:
  type: ClusterIP
  selector:
    app: shipping
  ports:
    - name: grpc
      port: 50051
      targetPort: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cart
spec:
  selector:
    matchLabels:
      app: redis-cart
  template:
    metadata:
      labels:
        app: redis-cart
    spec:
      containers:
        - name: redis
          image: redis:alpine
          ports:
            - containerPort: 6379
          readinessProbe:
            periodSeconds: 5
            tcpSocket:
              port: 6379
          livenessProbe:
            periodSeconds: 5
            tcpSocket:
              port: 6379
          volumeMounts:
            - mountPath: /data
              name: redis-data
          resources:
            limits:
              memory: 256Mi
              cpu: 125m
            requests:
              cpu: 70m
              memory: 200Mi
      volumes:
        - name: redis-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cart
spec:
  type: ClusterIP
  selector:
    app: redis-cart
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ad
spec:
  selector:
    matchLabels:
      app: ad
  template:
    metadata:
      labels:
        app: ad
    spec:
      serviceAccountName: go-micro
      terminationGracePeriodSeconds: 5
      containers:
        - name: server
          image: xpunch/go-micro-demo-ad:v1.0.0
          ports:
            - containerPort: 9555
          env:
            - name: PORT
              value: "9555"
            - name: DISABLE_STATS
              value: "1"
            - name: DISABLE_TRACING
              value: "1"
            - name: DISABLE_PROFILER
              value: "1"
          # - name: JAEGER_SERVICE_ADDR
          #   value: "jaeger-collector:14268"
          resources:
            requests:
              cpu: 200m
              memory: 180Mi
            limits:
              cpu: 300m
              memory: 300Mi
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 15
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:9555"]
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 15
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:9555"]
---
apiVersion: v1
kind: Service
metadata:
  name: ad
spec:
  type: ClusterIP
  selector:
    app: ad
  ports:
    - name: grpc
      port: 9555
      targetPort: 9555
# [END gke_release_kubernetes_manifests_microservices_demo]
